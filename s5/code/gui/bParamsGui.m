classdef bParamsGui < bGuiDefinition
    %BPARAMSGUI Gui to handle parameters

    
    properties(Access = private)
    
        Type = 'app';
        
        ButtongroupParametersType
        List
        TextID
        TextValue
        TextDtype
        
        Params

    end
       
    methods
        
        % CONSTRUCTOR
        function me = bParamsGui(guiTop,name)
            me = me@bGuiDefinition(guiTop,name);
            zeroPos = uiPosition(0,'character');
            me.Figure = figure(...
                'Units','character',...
                'Position',[10,zeroPos(4)-35,100,30],...
                'Visible','off',...
                'ToolBar','none',...
                'MenuBar','none',...
                'Name','Parameters',...
                'NumberTitle','off',...
                'CloseRequestFcn',@(~,~)me.Top.removeGui(me.Name));
            
            me.SelectionRibbon = bSelectionRibbon(me,false,true);
            
            me.ButtongroupParametersType = uibuttongroup(me.Figure,...
                'Units','character',...
                'Position',[0,30-bSelectionRibbon.HeightInChars-2,100,2],...
                'BorderType','none',...
                'SelectionChangedFcn',@(h,~)me.showType(get(get(h,'SelectedObject'),'UserData')));
                
            uicontrol(me.ButtongroupParametersType,...
                'UserData','app',...
                'Style','toggle',...
                'Units','character',...
                'Position',[2,0.2,20,1.6],...
                'String','Application',...
                'Value',1);
            uicontrol(me.ButtongroupParametersType,...
                'UserData','gui',...
                'Style','toggle',...
                'Units','character',...
                'Position',[24,0.2,20,1.6],...
                'String','GUI');
            uicontrol(me.ButtongroupParametersType,...
                'UserData','file',...
                'Style','toggle',...
                'Units','character',...
                'Position',[46,0.2,20,1.6],...
                'String','File');          
            
            me.List = uicontrol(me.Figure,...
                'Style','list',...
                'Units','character',...
                'Position',[2,1,50,30-bSelectionRibbon.HeightInChars-4],...
                'Callback',@(h,~)me.selectParam(get(h,'Value')));
            
            uicontrol(me.Figure,...
                'Style','text',...
                'Units','character',...
                'Position',[54,20,44,1.1],...
                'String','ID');
            me.TextID = uicontrol(me.Figure,...
                'Style','edit',...
                'Units','character',...
                'Position',[54,18.2,44,1.6]);
            uicontrol(me.Figure,...
                'Style','text',...
                'Units','character',...
                'Position',[54,16,44,1.1],...
                'String','Value');
            me.TextValue = uicontrol(me.Figure,...
                'Style','edit',...
                'Units','character',...
                'Position',[54,14.2,44,1.6]);
            uicontrol(me.Figure,...
                'Style','text',...
                'Units','character',...
                'Position',[54,12,44,1.1],...
                'String','Data Type');
            me.TextDtype = uicontrol(me.Figure,...
                'Style','edit',...
                'Units','character',...
                'Position',[54,10.2,44,1.6]);
            
            uicontrol(me.Figure,...
                'Style','pushbutton',...
                'Units','character',...
                'Position',[54,5,44,2.4],...
                'String','Save',...
                'Callback',@(~,~)me.save());
            uicontrol(me.Figure,...
                'Style','pushbutton',...
                'Units','character',...
                'Position',[54,3,44,1.6],...
                'String','Add',...
                'Callback',@(~,~)me.add());
            uicontrol(me.Figure,...
                'Style','pushbutton',...
                'Units','character',...
                'Position',[54,1,44,1.6],...
                'String','Remove',...
                'Callback',@(~,~)me.remove());

            set(me.Figure,'Visible','on');
            me.showType('app');
        end
        
        % SET THE DISPLAYED FILES
        function setDisplayedFiles(me,filesVector)
            if strcmp(me.Type,'file');
                if ~isempty(filesVector) && filesVector(1) > 0
                    me.Params = me.Application.file(filesVector(1)).Parameters;
                    me.show();
                else
                    msgbox('No file to show. The file is the DISPLAY file');
                end
            end
        end

        % SHOW TYPE
        function showType(me,type)
            me.Type = type;
            switch type
                case 'app'
                    me.Params = me.Application.Parameters;
                case 'gui'
                    me.Params = me.Top.Parameters;
                case 'file'
                    me.setDisplayedFiles(me.DisplayVector);
                otherwise
                    errid  = 'batalef:parameters:objectWrongType';
                    errstr = sprintf('Parameters-object type %s is not allowed',type);
                    err = MException(errid,errstr);
                    throwAsCaller(err);
            end
            me.show();
        end
        
        % SHOW
        function show(me)
            [~,N] = fields2cell(me.Params.get([]));
            N = sort(N);
            set(me.List,'Value',1);
            set(me.List,'String',N);
            me.selectParam(1);
        end
        
        % SHOW PARAM
        function selectParam(me,i)
            S = get(me.List,'String');
%             v = get(me.List,'Value');
            pID  = S{i};
            pDtype = me.Params.getType(pID);
            pValue = bParameters.par2str(me.Params.get(pID),pDtype);
            set(me.TextID,'String',pID);
            set(me.TextValue,'String',pValue);
            set(me.TextDtype,'String',pDtype);
        end
        
        % SAVE
        function save(me)
            try
                pID    = get(me.TextID,'String');
                pValue = get(me.TextValue,'String');
                pDtype = me.Params.getType(pID);
                pValue = bParameters.str2par(pValue,pDtype);
                me.Params.set(pID,pValue);
            catch err
                filterError(err,'batalef:parameters')
                msgbox(err.message)
            end
        end
        
        % ADD
        function add(me)
            try
                pID    = get(me.TextID,'String');
                pValue = get(me.TextValue,'String');
                pDtype = get(me.TextDtype,'String');
                pValue = bParameters.str2par(pValue,pDtype);
                me.Params.add(pID,pValue,pDtype);
                me.show();
            catch err
                filterError(err,'batalef:parameters')
                msgbox(err.string)
            end            
        end
        
        % REMOVE
        function remove(me)
            try
                pID    = get(me.TextID,'String');
                me.Params.remove(pID);
                me.show();
            catch err
                filterError(err,'batalef:parameters')
                msgbox(err.message)
            end                        
        end
        
    end
    
end

